name: flaarum # you probably want to 'snapcraft register <name>'
base: core20 # the base snap is the execution environment for this snap
version: '1.7.4' # just for humans, typically '1.2+git' or '1.3.2'
summary: A database that enforces structures # 79 char long summary
description: |
  Flaarum brings in autoscaling, autoindexing, table expansion
  ( a more comfortable form of joins), and supports any change
  to its table structure.

  It also supports a query language though not SQL.

grade: stable # must be 'stable' to release into candidate/stable channels
confinement: strict # use 'strict' once you have the right plugs and slots

architectures:
  - build-on: amd64


parts:
  all-needed-files:
    # See 'snapcraft plugins'
    plugin: go
    source: https://github.com/bankole7782/flaarum.git
    override-build: |
      set -xe
      go mod download
      go build -o $SNAPCRAFT_PART_INSTALL/bin/astest ./astest
      go build -o $SNAPCRAFT_PART_INSTALL/bin/cli ./cli
      go build -o $SNAPCRAFT_PART_INSTALL/bin/gcpasr ./gcpasr
      go build -o $SNAPCRAFT_PART_INSTALL/bin/inout ./inout
      go build -o $SNAPCRAFT_PART_INSTALL/bin/lgcp ./lgcp
      go build -o $SNAPCRAFT_PART_INSTALL/bin/prod ./prod
      go build -o $SNAPCRAFT_PART_INSTALL/bin/store ./store
      go build -o $SNAPCRAFT_PART_INSTALL/bin/statsr ./statsr
      go build -o $SNAPCRAFT_PART_INSTALL/bin/tindexer ./tindexer

      cp $SNAPCRAFT_PART_SRC/store/https-server.crt $SNAPCRAFT_PART_INSTALL/https-server.crt
      cp $SNAPCRAFT_PART_SRC/store/https-server.key $SNAPCRAFT_PART_INSTALL/https-server.key
      cp $SNAPCRAFT_PART_SRC/english-stopwords.json $SNAPCRAFT_PART_INSTALL/english-stopwords.json


apps:
  astest:
    command: bin/astest
    plugs:
      - network

  cli:
    command: bin/cli
    plugs:
      - network

  gcpasr:
    command: bin/gcpasr
    daemon: simple
    restart-condition: on-abnormal
    plugs:
      - network

  inout:
    command: bin/inout


  lgcp:
    command: bin/lgcp
    plugs:
      - network


  prod:
    command: bin/prod


  store:
    command: bin/store
    daemon: simple
    restart-condition: on-abnormal
    plugs:
      - network
      - network-bind

  statsr:
    command: bin/statsr
    daemon: simple
    restart-condition: on-abnormal
    plugs:
      - network

  tindexer:
    command: bin/tindexer
    daemon: simple
    restart-condition: on-abnormal
